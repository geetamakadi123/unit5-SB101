Checked:These are the exceptions that are checked at compile time. 
If some code within a method throws a checked exception, then the method must either handle the exception or it must specify the exception using the throws keyword. In checked exception, there are two types: fully checked and partially checked exceptions. A fully checked exception is a checked exception where all its child classes are also checked, like IOException, InterruptedException.
 A partially checked exception is a checked exception where some of its child classes are unchecked, like Exception.
 
 Example:Checked=>
 
 
	
Unchecked:In Java, exceptions under Error and RuntimeException classes are unchecked exceptions, 
everything else under throwable is checked. 

Consider the following Java program. 
It compiles fine, but it throws ArithmeticException when run. 
The compiler allows it to compile because ArithmeticException is an unchecked exception.

 Java Program to Illustrate Un-checked Exceptions
Example:Unchecked=>
 Main class
class Main {

	
	public static void main(String args[])
	{
		// Here we are dividing by 0
		// which will not be caught at compile time
		// as there is no mistake but caught at runtime
		// because it is mathematically incorrect
		int x = 0;
		int y = 10;
		int z = y / x;
	}
}



